<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jcticket.ticketing.mybatis.mapper.ticketing.TicketingMapper">
    <!-- 예매창 구현에 필요한 쿼리들 -->

    <!-- ********** step1. 일정 선택 ************-->

    <!-- 회차 테이블 insert하는 쿼리 -->
    <insert id="insert" parameterType="ShowingDto" useGeneratedKeys="true" keyProperty="showing_seq">
        INSERT INTO showing
        (showing_seq,
         showing_start_at,
         showing_end_at,
         showing_info,
         showing_date,
         showing_day,
         showing_status,
         showing_seat_cnt,
         play_id,
         stage_id,
         created_at,
         created_id,
         updated_at,
         updated_id)
        VALUES
            (#{showing_seq},
             CURRENT_TIMESTAMP,
             CURRENT_TIMESTAMP,
             #{showing_info},
             #{showing_date},
             #{showing_day},
             #{showing_status},
             #{showing_seat_cnt},
             #{play_id},
             #{stage_id},
             CURRENT_TIMESTAMP,
             'system',
             CURRENT_TIMESTAMP,
             'system')
    </insert>

    <!-- 공연아이디별 삭제 -->
    <delete id="deleteByPlayId" parameterType="string">
        delete
        from showing
        where 1=1
          and play_id = #{play_id}
    </delete>

<!--    회차시퀀스별 삭제-->
    <delete id="deleteBySeq" parameterType="int">
        delete
        from showing
        where 1=1
        and showing_seq = #{showing_seq}
    </delete>


    <!-- 전체 삭제하는 쿼리 -->
    <delete id="deleteAll">
        delete from showing
    </delete>

    <!-- 공연아이디별회차 수 카운트 -->
    <select id="countByPlayId" parameterType="String" resultType="int">
        select count(*)
        from showing
        where 1=1
        and play_id = #{play_id}
    </select>

<!--    공연아이디별 조회-->
    <select id="selectByPlayId" resultType="ShowingDto">
        select *
        from showing
        where 1=1
          and play_id = #{play_id}
    </select>

<!--    공연아이디별 공연일정 조회-->
    <select id="selectDateByPlayId" parameterType="string" resultType="hashmap">
        select showing_date
        from showing
        where 1=1
        and play_id = #{play_id}
        group by showing_date
        order by showing_date asc;
    </select>
<!--    공연아이디 && 공연일정별  회차정보 조회-->
    <select id="selectRound" parameterType="hashmap" resultType="hashmap">
        select showing_info
        from showing
        where 1=1
        and play_id = #{play_id}
        and showing_date = #{date_text}
        order by showing_info asc
    </select>

<!--    공연아이디로 공연명과 ,공연포스터, 공연장명 조회-->
    <select id="selectPlayStageName" parameterType="string" resultType="hashmap">
        SELECT p.play_name, p.play_poster, t.stage_name
        from play p
        inner join (select DISTINCT play_id , stage_id from showing) as s
        on p.play_id = s.play_id
        inner join stage t
        on s.stage_id = t.stage_id
        where 1=1
        and s.play_id = #{play_id}
    </select>



    <!-- 공연아이디로 회차시퀀스 조회 -->

    <select id="selectSeq" parameterType="string" resultType="hashmap">
        select showing_seq
        from showing
        where 1=1
        and play_id = #{play_id}
    </select>

    <!-- 공연날짜 조회 - datepicker에 표시하기 위해-->
    <select id="selectShowingDate" parameterType="string" resultType="hashmap">
        select showing_date
        from showing
        where 1=1
        and play_id = #{play_id}
        order by showing_date asc;
    </select>

    <!-- 공연회차정보, 시퀀스 조회 - 시퀀스도 같이 얻어와서 회차별 좌석정보 구분한다. -->
    <!-- Parameter 가 2개인데 별도의 DTO 작성없이 HashMap으로 대체한다. -->
    <select id="selectShowingRound" parameterType="hashmap" resultType="hashmap">
        select showing_info,showing_seq
        from showing
        where 1=1
        and showing_date = #{dateText} and play_id = #{play_id}
    </select>

    <!-- 상세페이지에서 선택된 공연아이디(play_id)로 공연명(play_name), 공연장(stage_name) 조회하는 쿼리 -->
    <!-- 회차(showing) 테이블의 play_id 컬럼, stage_id 컬럼을 이용하여 3개 테이블 조인  -->


<!--    <select id="countShowingAll" resultType="int">-->
<!--        select count(*)-->
<!--        from showing-->
<!--    </select>-->


    <!-- ************** next steps **************** -->
    <!-- 좌석가격 조회 -->
    <select id="seat_price" resultType="int">
        select seat_price
        from seat_class
    </select>
    <select id="selectAll" resultType="TicketingDto">
        SELECT ticketing_id, ticketing_at, ticketing_cnt,
               ticketing_status, showing_info, showing_date,
               cancelable_at, play_price, stage_name,
               choice_show_seat, ticketing_price, user_name,
               viewing_at, play_name
        FROM ticketing
    </select>
</mapper>
<!-- com.jcticket.example.mybatis.mapper.ticketing.ticketingMapper -->