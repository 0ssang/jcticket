<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org.//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jcticket.ticketing.mybatis.mapper.mypage.mypageMapper">

    <sql id="selectTicketingDto">
        SELECT t.ticketing_at,
               t.ticketing_id,
               t.play_name,
               t.viewing_at,
               t.ticketing_cnt,
               (SELECT cc.comn_code_name
                FROM comn_code cc
                WHERE cc.comn_code_id = t.ticketing_status) AS ticketing_status
        FROM ticketing t
    </sql>

    <select id="selectLimit" parameterType="map" resultType="TicketingDTO">
        <include refid="selectTicketingDto"></include>
        ORDER BY
        t.ticketing_at DESC
        LIMIT 5;
    </select>

    <select id="count" parameterType="map" resultType="int">
        select count(*)
        from ticketing t
        where
        true
        <choose>
            <when test='option=="A"'>
                AND t.ticketing_status IN ('Y', 'N')
            </when>
            <when test='option=="Y"'>
                AND t.ticketing_status = 'Y'
            </when>
            <when test='option=="C"'>
                AND t.ticketing_status = 'N'
            </when>
        </choose>
        <if test=" (start_date != '' and end_date != '') and (start_date != null and end_date != null) ">
            AND t.ticketing_at between DATE_FORMAT(#{start_date} , '%Y-%m-%d') and DATE_FORMAT(#{end_date}, '%Y-%m-%d')
        </if>
    </select>
    <!--  ===========================================================================================================================================================================  -->

    <!--  view page  리스트 출력  -->
    <select id="view_count" parameterType="map" resultType="int">
        SELECT COUNT(*) AS total_count
        FROM (
        SELECT t.ticketing_id
        FROM ticketing t
        JOIN play p ON t.play_name = p.play_name
        WHERE true
        <choose>
            <when test='option=="A"'>
                AND p.play_middle_cat IN ('공연', '콘서트', '전시', '뮤지컬')
            </when>
            <when test='option=="M"'>
                AND p.play_middle_cat = '뮤지컬'
            </when>
            <when test='option=="C"'>
                AND p.play_middle_cat = '콘서트'
            </when>
            <when test='option=="J"'>
                AND p.play_middle_cat = '전시'
            </when>
            <when test='option=="G"'>
                AND p.play_middle_cat = '공연'
            </when>
        </choose>
        <if test="(start_date != '' and end_date != '') and (start_date != null and end_date != null)">
            AND t.ticketing_at BETWEEN DATE_FORMAT(#{start_date}, '%Y-%m-%d') AND DATE_FORMAT(#{end_date}, '%Y-%m-%d')
        </if>
        <if test="keyword != null and keyword != ''">
            AND t.play_name LIKE CONCAT('%', #{keyword}, '%')
        </if>
        GROUP BY t.ticketing_id
        ) AS ticket_count;

    </select>

    <!--  ===========================================================================================================================================================================  -->

    <!-- TicketingDto 기반으로 만든 mypage_ticket 페이지 -->
    <select id="selectAll" parameterType="map" resultType="TicketingDto">
        SELECT
        t.ticketing_at,
        t.ticketing_id,
        t.play_name,
        t.viewing_at,
        t.ticketing_cnt,
        (SELECT cc.comn_code_name FROM comn_code cc WHERE cc.comn_code_id = t.ticketing_status) AS ticketing_status
        FROM
        ticketing t
        WHERE
        true
        <choose>
            <when test='option=="A"'>
                AND t.ticketing_status IN ('Y', 'N')
            </when>
            <when test='option=="Y"'>
                AND t.ticketing_status = 'Y'
            </when>
            <when test='option=="C"'>
                AND t.ticketing_status = 'N'
            </when>
        </choose>
        <if test=" (start_date != '' and end_date != '') and (start_date != null and end_date != null) ">
            AND t.ticketing_at between DATE_FORMAT(#{start_date} , '%Y-%m-%d') and DATE_FORMAT(#{end_date}, '%Y-%m-%d')
        </if>
        ORDER BY ticketing_at DESC
        LIMIT #{pageSize}
        OFFSET #{offset};
    </select>

    <!--  ===========================================================================================================================================================================  -->

    <insert id="insert" parameterType="TicketingDto">
        insert into ticketing (ticketing_id, ticketing_at, ticketing_cnt, ticketing_status,
                               showing_info, showing_date, cancelable_at, play_price, stage_name,
                               choice_show_seat, ticketing_price, user_name, user_id, viewing_at,
                               play_name, created_at, created_id, updated_at, updated_id)
        VALUES (#{ticketing_id}, #{ticketing_at}, #{ticketing_cnt}, #{ticketing_status},
                #{showing_info}, #{showing_date}, current_timestamp, #{play_price},
                #{stage_name}, #{choice_show_seat}, #{ticketing_price}, #{user_name},
                #{user_id}, current_timestamp, #{play_name}, current_timestamp, #{created_id},
                current_timestamp, #{updated_id})
    </insert>

    <!--  ===========================================================================================================================================================================  -->


    <select id="select_view" parameterType="map" resultType="TicketingDto">

        SELECT
        t.ticketing_id,
        MAX(t.ticketing_at) AS ticketing_at,
        MAX(t.stage_name) AS stage_name,
        MAX(t.choice_show_seat) AS choice_show_seat,
        MAX(p.play_middle_cat) AS play_middle_cat,
        MAX(t.play_name) AS play_name
        FROM
        ticketing t
        JOIN play p ON t.play_name = p.play_name
        WHERE
        true
        <choose>
            <when test='option=="A"'>
                AND p.play_middle_cat IN ('공연', '콘서트', '전시', '뮤지컬')
            </when>
            <when test='option=="M"'>
                AND p.play_middle_cat = '뮤지컬'
            </when>
            <when test='option=="C"'>
                AND p.play_middle_cat = '콘서트'
            </when>
            <when test='option=="J"'>
                AND p.play_middle_cat = '전시'
            </when>
            <when test='option=="G"'>
                AND p.play_middle_cat = '공연'
            </when>
        </choose>
        <if test="(start_date != '' and end_date != '') and (start_date != null and end_date != null)">
            AND t.ticketing_at BETWEEN DATE_FORMAT(#{start_date}, '%Y-%m-%d') AND DATE_FORMAT(#{end_date}, '%Y-%m-%d')
        </if>
        <if test="keyword != null and keyword != ''">
            AND t.play_name LIKE CONCAT('%', #{keyword}, '%')
        </if>
        GROUP BY
        t.ticketing_id
        ORDER BY
        ticketing_at DESC
        LIMIT #{pageSize}
        OFFSET #{offset};
    </select>

    <!--  ===========================================================================================================================================================================  -->

    <insert id="Inquiry_insert" parameterType="InquiryDto">
        INSERT INTO `Inquiry` (`inquiry_seq`, `inquiry_title`, `inquiry_img`, `inquiry_content`,
                               `inquiry_time`, `inquiry_category`, `user_id`, `created_at`, `created_id`,
                               `updated_at`, `updated_id`)
        VALUES (#{inquiry_seq}, #{inquiry_title}, #{inquiry_img}, #{inquiry_content},
                current_timestamp, #{inquiry_category}, #{user_id}, current_timestamp,
                #{created_id}, current_timestamp, #{updated_id});
    </insert>

    <!--  ===========================================================================================================================================================================  -->

    <!--  예매 상세보기   -->
    <select id="ticket_detail" resultType="TicketingDto" parameterType="String">
        SELECT t.ticketing_at,
               t.user_name,
               t.viewing_at,
               t.stage_name,
               t.ticketing_id,
               t.play_name,
               t.viewing_at,
               t.ticketing_cnt,
               t.choice_show_seat,
               (SELECT cc.comn_code_name
                FROM comn_code cc
                WHERE cc.comn_code_id = t.ticketing_status) AS ticketing_status
        FROM ticketing t
        WHERE t.ticketing_id = #{ticketing_id};
    </select>

    <!--  ===========================================================================================================================================================================  -->

    <select id="coupon_count" parameterType="String" resultType="CouponDto">
        SELECT *
        FROM coupon
        <if test="coupon_id != null and coupon_id != ''">
            WHERE coupon_id = #{coupon_id}
        </if>
    </select>

    <insert id="coupon_insert" parameterType="UserCouponDto">
                INSERT INTO coupon_user
        (user_coupon_seq, user_id, coupon_id, coupon_use_at, coupon_issue_at, coupon_expire_at, coupon_use_yn, created_at, created_id, updated_at, updated_id)
        VALUES
            (#{user_coupon_seq}, "Ralo2", #{coupon_id}, null, NOW(), NOW()+INTERVAL + 1 WEEK, 'N', NOW() , #{created_id}, NOW(), #{updated_id});
    </insert>


    <update id="update_coupon" parameterType="CouponDto">
        update coupon
        set coupon_status = 'U'
        where coupon_id = #{coupon_id};
    </update>


    <select id="coupon_list" parameterType="map" resultType="UserCouponDto">
        SELECT uc.coupon_id,
               uc.coupon_issue_at,
               uc.coupon_expire_at,
               (SELECT coupon_name
                FROM coupon c
                WHERE c.coupon_id = uc.coupon_id) AS coupon_name,
               (SELECT coupon_discount_amount
                FROM coupon c
                WHERE c.coupon_id = uc.coupon_id) AS coupon_discount_amount,
               (SELECT coupon_use_condition
                FROM coupon c
                WHERE c.coupon_id = uc.coupon_id) AS coupon_use_condition
        FROM coupon_user uc;
    </select>

</mapper>